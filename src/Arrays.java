public class Arrays {
    public static void main(String[] args) {
//Задача1.1 Обьявить целочисленный массив, заполненный тремя цифрами – 1, 2 и 3 – с помощью ключевого слова new.

        System.out.println("*** Задача 1: Объявление массивов \n");

        int[] arrInt = new int[3];
        arrInt[0] = 1;
        arrInt[1] = 2;
        arrInt[2] = 3;
        System.out.println("Объявлен массив arrInt. Его длина = " + arrInt.length);

//Задача1.2 Обьявить массив, в котором можно хранить три дробных числа – 1.57, 7.654, 9.986 –  сразу заполнив его
// значениями.


        double[] arrDouble = {1.57, 7.654, 9.986};
        System.out.println("Объявлен массив arrDouble. Его длина = " + arrDouble.length);


//Задача1.3 Произвольный массив – тип и количество данных определите сами. Самостоятельно выберите способ создания
// массива: с помощью ключевого слова или сразу заполненный элементами.


        String[] arrString = {"I", "love", "you", "JAVA", "so", "much", "!"};
        System.out.println("Объявлен массив arrString. Его длина = " + arrString.length);

//Задача2  Пройдите по каждому из трех массивов и распечатайте все элементы всех трех массивов, начиная с первого
// элемента, через запятую. Запятая между последним элементом одного массива и первым элементом следующего не нужна.
        System.out.println("\n*** Задача 2: Вывод в консоль значений элементов массивов \n");

        for (int i = 0; i < arrInt.length; i++) {  // Используем цикл for для прохода по элементам массива

            if (i == arrInt.length - 1) {             // (Проверка) Если элемент массива последний, то выводим его в
                // консоль без добавления запятой, но добавляем переход на следующую строку.
                System.out.print(arrInt[i] + "\n");
            } else {                                 // (Проверка) Иначе элемент массива не последний, выводим его в
                // консоль с добавлением запятой.
                System.out.print(arrInt[i] + ",");
            }

        }


        for (int f = 0; f < arrDouble.length; f++) {
            if (f == arrDouble.length - 1) {
                System.out.print(arrDouble[f] + "\n");
            } else {
                System.out.print(arrDouble[f] + ",");

            }

        }

        for (int j = 0; j < arrString.length; j++) {
            if (j == arrString.length - 1) {
                System.out.print(arrString[j]);
            } else {
                System.out.print(arrString[j] + ",");
            }

        }

        System.out.println("\n*** Задача 3: Вывод в консоль значений элементов массивов в обратном порядке \n");

        for (int k = arrInt.length - 1; k >= 0; k--) {  // Используем цикл for для прохода по элементам массива, но в этот
            // раз переменная должна присваивать значение длины массива и если она >= 0( равно - так как 0 - это индекс
            // первого элемента массива), то декремент при каждой итерации уменьшает ее значение и мы выводим в консоль
            // элементы массива начиная с последнего.

            if (k == 0) {  // (Проверка) Если элемент массива первый, то выводим его в
                // консоль без добавления запятой, но добавляем переход на следующую строку.
                System.out.print(arrInt[k] + "\n");
            } else {                                 // (Проверка) Иначе элемент массива не первый, выводим его в
                // консоль с добавлением запятой.
                System.out.print(arrInt[k] + ",");
            }

        }


        for (int l = arrDouble.length - 1; l >= 0; l--) {
            if (l == 0) {
                System.out.print(arrDouble[l] + "\n");
            } else {
                System.out.print(arrDouble[l] + ",");

            }

        }

        for (int m = arrString.length - 1; m >= 0; m--) {
            if (m == 0) {
                System.out.print(arrString[m]);
            } else {
                System.out.print(arrString[m] + ",");
            }

        }

        System.out.println("\n*** Задача 4:Преобразовать все нечетные числа в целочисленном массиве четными с помощью" +
                " " +
                "прибавления 1 \n");

        int[] arrEven = {1, 2, 3, 4, 5, 6, 7, 8, 9};

        for (int c = 0; c < arrEven.length; c++) {// Проходим по элементам массива

            if (arrEven[c] % 2 != 0) {  // Если при делении на 2 значение элемента массива не равно 0 - то оно
                // нечетное, тогда прибавляем к нему 1 и выводим в консоль вместе с записью о преобразовании.
                arrEven[c]++;
                System.out.println(arrEven[c] + " Нечетное преобразовано");
            } else {                             // Иначе - числа четные и  выводим в консоль их как есть
                System.out.println(arrEven[c]);
            }

        }
    }
}
